---
# Code Formatter: based on pycodestyle (formerly called PEP8)
repos:
-   repo: https://github.com/ambv/black
    rev: '22.8.0'
    hooks:
    - id: black-jupyter
      args:
        - "--line-length=110"
      # It is recommended to specify the latest version of Python
      # supported by your project here, or alternatively use
      # pre-commit's default_language_version, see
      # https://pre-commit.com/#top_level-default_language_version
      language_version: python3.9

-   repo: https://github.com/pycqa/flake8
    rev: '5.0.4'
    hooks:
    - id: flake8
      args:
      # make compatible with black
      - "--max-line-length=110"
      entry: python3.9 -m flake8

# Hooks provided by pre-commit.
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 'v4.2.0'
    hooks:
    - id: check-yaml
    - id: sort-simple-yaml
    - id: trailing-whitespace
    - id: end-of-file-fixer
    - id: check-added-large-files
      args: ['--maxkb=1000']
    - id: check-json
    - id: fix-encoding-pragma
    - id: detect-private-key
    - id: detect-aws-credentials
      args: ['--allow-missing-credentials']
    - id: pretty-format-json
      args: ['--autofix', '--indent=2', '--no-sort-keys']
    - id: name-tests-test
      args: ['--pytest']

# Static type checker for Python
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v0.950'
    hooks:
    - id: mypy
      args: [--no-strict-optional, --ignore-missing-imports]

# Run pytest
-   repo: local
    hooks:
     -  id: tests
        name: pytest
        entry: pytest
        pass_filenames: false
        language: system
        types: [python]
        stages: [commit]

# It automatically reorders python imports provided by PyCQA
-   repo: https://github.com/PyCQA/isort
    rev: '5.10.1'
    hooks:
    - id: isort
      args: ["black", "--profile"]

# Run linter to dockerfile
- repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
  rev: 'v0.1.0'
  hooks:
  - id: dockerfilelint
    stages: [commit]
