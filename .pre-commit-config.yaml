---
# Code Formatter: based on pycodestyle (formerly called PEP8)
repos:
-   repo: https://github.com/ambv/black
    rev: '22.8.0'
    hooks:
    - id: black
      language_version: python3.9
    - id: black-jupyter
      language_version: python3.9

# Flake8 is a wrapper around these tools:
#   o pyflakes checks Python source files for errors
#   o pycodestyle: Python style guide checker
#   o McCabe complexity checker: place your "# noqa: C901" on the function definition to silence violations
# NOTE: files that contain "# flake8: noqa" are skipped
# lines that contain a # noqa comment at the end will not issue warnings.
# you can ignore specific errors on a line with # noqa: <error>, e.g., # noqa: E234. Multiple codes can be given, separated by comma.
-   repo: https://github.com/pycqa/flake8
    rev: '5.0.0'
    hooks:
    - id: flake8
      additional_dependencies:
      - flake8-black>=0.1.1
      language_version: python3.9

# Hooks provided by pre-commit.
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: 'v4.2.0'
    hooks:
    - id: check-yaml           # Attempts to load all yaml files to verify syntax.
    - id: sort-simple-yaml     # Sorts simple YAML files which consist only of top-level keys
    - id: trailing-whitespace  # Trims trailing whitespace
    - id: end-of-file-fixer    # Makes sure files end in a newline and only a newline.
    - id: check-added-large-files # Prevent giant files from being committed.
      args: ['--maxkb=10000']  # 10 Mb limit
    - id: check-json           # Attempts to load all json files to verify syntax.
    - id: fix-encoding-pragma  # Add "# -*- coding: utf-8 -*-"" to the top of python files.
    - id: detect-aws-credentials # Checks existence of AWS secrets keys
      args: ['--allow-missing-credentials'] # Allow hook to pass when no credentials are detected
    - id: pretty-format-json   # Checks that all your JSON files are pretty.
      args: ['--autofix']      # automatically format json files
    - id: name-tests-test      # verifies that test files are named correctly.
      args: ['--pytest']       # test suite used within the project
      #exclude: ^tests/folder/file_name # example of file to exclude

# Static type checker for Python
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v0.950'
    hooks:
    - id: mypy
      args: [--no-strict-optional, --ignore-missing-imports]

# run pytest for every commit [it requires pytest installed]
-   repo: local
    hooks:
     -  id: tests
        name: pytest
        entry: conda run pytest --benchmark-skip
        pass_filenames: false
        language: system
        types: [python]
        stages: [commit]
